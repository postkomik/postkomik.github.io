{"version":3,"sources":["../../src/Option.jsx"],"names":["React","PropTypes","colorsRaw","NAME","getGUID","Option","props","id","render","name","value","label","onChange","selected","multiple","padding","margin","color","backgroundColor","blue","grayLight","border","borderRadius","cursor","paddingRight","display","alignItems","marginRight","Component","propTypes","string","isRequired","node","func","bool"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,SAAxB;;IAEqBC,M;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AACjB,wCAAMA,KAAN;AACA,UAAKC,EAAL,GAAUH,OAAO,EAAjB;AAFiB;AAGlB;;;;SAEDI,M,GAAA,kBAAS;AACP,sBAA6D,KAAKF,KAAlE;AAAA,QAAQG,IAAR,eAAQA,IAAR;AAAA,QAAcC,KAAd,eAAcA,KAAd;AAAA,QAAqBC,KAArB,eAAqBA,KAArB;AAAA,QAA4BC,QAA5B,eAA4BA,QAA5B;AAAA,QAAsCC,QAAtC,eAAsCA,QAAtC;AAAA,QAAgDC,QAAhD,eAAgDA,QAAhD;AACA,QAAMP,EAAE,GAAM,KAAKA,EAAX,SAAiBG,KAAzB;AAEA,wBACE,uDACE,yCAAYP,IAAZ,6CADF,eAEE;AACE,MAAA,SAAS,EAAKA,IAAL,aADX;AAEE,MAAA,KAAK,EAAE;AACLY,QAAAA,OAAO,EAAE,SADJ;AAELC,QAAAA,MAAM,EAAE,CAFH;AAGLC,QAAAA,KAAK,EAAEJ,QAAQ,GAAG,OAAH,GAAa,SAHvB;AAILK,QAAAA,eAAe,EAAEL,QAAQ,GAAGX,SAAS,CAACiB,IAAb,GAAoBjB,SAAS,CAACkB,SAJlD;AAKLC,QAAAA,MAAM,EAAE,uBALH;AAMLC,QAAAA,YAAY,EAAE;AANT;AAFT,oBAWE;AACE,MAAA,OAAO,EAAEf,EADX;AAEE,MAAA,KAAK,EAAE;AACLgB,QAAAA,MAAM,EAAE,SADH;AAELC,QAAAA,YAAY,EAAE,CAFT;AAGLC,QAAAA,OAAO,EAAE,MAHJ;AAILC,QAAAA,UAAU,EAAE;AAJP;AAFT,oBASE;AACE,MAAA,EAAE,EAAEnB,EADN;AAEE,MAAA,KAAK,EAAE;AACLoB,QAAAA,WAAW,EAAE;AADR,OAFT;AAKE,MAAA,IAAI,EAAEb,QAAQ,GAAG,UAAH,GAAgB,OALhC;AAME,MAAA,IAAI,EAAEL,IANR;AAOE,MAAA,OAAO,EAAEI,QAPX;AAQE,MAAA,QAAQ,EAAE;AAAA,eAAM,IAAN;AAAA,OARZ;AASE,MAAA,OAAO,EAAE;AAAA,eAAMD,QAAQ,EAAd;AAAA;AATX,MATF,eAoBE,kCAAOD,KAAP,CApBF,CAXF,CAFF,CADF;AAuCD,G;;;EAjDiCX,KAAK,CAAC4B,S;;SAArBvB,M;AAoDrBA,MAAM,CAACwB,SAAP,GAAmB;AACjBpB,EAAAA,IAAI,EAAER,SAAS,CAAC6B,MAAV,CAAiBC,UADN;AAEjBrB,EAAAA,KAAK,EAAET,SAAS,CAAC6B,MAAV,CAAiBC,UAFP;AAGjBpB,EAAAA,KAAK,EAAEV,SAAS,CAAC+B,IAAV,CAAeD,UAHL;AAIjBnB,EAAAA,QAAQ,EAAEX,SAAS,CAACgC,IAAV,CAAeF,UAJR;AAKjBlB,EAAAA,QAAQ,EAAEZ,SAAS,CAACiC,IAAV,CAAeH,UALR;AAMjBjB,EAAAA,QAAQ,EAAEb,SAAS,CAACiC;AANH,CAAnB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colorsRaw } from 'netlify-cms-ui-default';\n\nimport { NAME } from './constants';\nimport { getGUID } from './utils';\n\nexport default class Option extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = getGUID();\n  }\n\n  render() {\n    const { name, value, label, onChange, selected, multiple } = this.props;\n    const id = `${this.id}_${value}`;\n\n    return (\n      <>\n        <style>{`.${NAME}__option:hover { filter: invert(15%); }`}</style>\n        <span\n          className={`${NAME}__option`}\n          style={{\n            padding: '2px 6px',\n            margin: 2,\n            color: selected ? 'white' : 'inherit',\n            backgroundColor: selected ? colorsRaw.blue : colorsRaw.grayLight,\n            border: '2px solid transparent',\n            borderRadius: 5,\n          }}\n        >\n          <label\n            htmlFor={id}\n            style={{\n              cursor: 'pointer',\n              paddingRight: 2,\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <input\n              id={id}\n              style={{\n                marginRight: 6,\n              }}\n              type={multiple ? 'checkbox' : 'radio'}\n              name={name}\n              checked={selected}\n              onChange={() => null}\n              onClick={() => onChange()}\n            />\n            <span>{label}</span>\n          </label>\n        </span>\n      </>\n    );\n  }\n}\n\nOption.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.node.isRequired,\n  onChange: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  multiple: PropTypes.bool,\n};\n"],"file":"Option.js"}