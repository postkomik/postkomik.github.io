import React from 'react';
import { fromJS } from 'immutable';
import { render } from '@testing-library/react'; // import 'react-testing-library/cleanup-after-each';

import '@testing-library/jest-dom/extend-expect';
import InlineSelectPreview from './InlineSelectPreview';
var options = [{
  value: 'foo',
  label: 'Foo'
}, {
  value: 'bar',
  label: 'Bar'
}, {
  value: 'baz',
  label: 'Baz'
}];
describe('InlineSelectPreview', function () {
  it('should render 1 value', function () {
    var _render = render( /*#__PURE__*/React.createElement(InlineSelectPreview, {
      value: "foo",
      field: fromJS({
        options: options,
        name: 'radio_1'
      })
    })),
        getByText = _render.getByText,
        queryByText = _render.queryByText;

    expect(getByText('Foo')).toBeInTheDocument();
    expect(queryByText('Bar')).not.toBeInTheDocument();
    expect(queryByText('Baz')).not.toBeInTheDocument();
  });
  it('should render list of values', function () {
    var _render2 = render( /*#__PURE__*/React.createElement(InlineSelectPreview, {
      value: ['foo', 'baz'],
      field: fromJS({
        options: options,
        name: 'radio_1'
      })
    })),
        getByText = _render2.getByText,
        queryByText = _render2.queryByText;

    expect(getByText('Foo')).toBeInTheDocument();
    expect(queryByText('Bar')).not.toBeInTheDocument();
    expect(getByText('Baz')).toBeInTheDocument();
  });
});
//# sourceMappingURL=InlineSelectPreview.test.js.map