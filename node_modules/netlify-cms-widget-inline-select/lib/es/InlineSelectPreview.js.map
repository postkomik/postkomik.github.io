{"version":3,"sources":["../../src/InlineSelectPreview.jsx"],"names":["React","PropTypes","fonts","colorsRaw","WidgetPreviewContainer","ImmutablePropTypes","getOptions","getValue","InlineSelectPreview","rawValue","value","field","options","values","Array","isArray","items","filter","optionsItem","find","item","name","get","length","fontFamily","primary","margin","display","flexWrap","map","padding","background","grayLight","borderRadius","color","grayDark","label","propTypes","oneOfType","string","arrayOf","listOf","shape","func","isRequired"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,sBAA3B,QAAyD,wBAAzD;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AAEA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,SAArC;AAEA,eAAe,SAASC,mBAAT,OAAyD;AAAA,MAAnBC,QAAmB,QAA1BC,KAA0B;AAAA,MAATC,KAAS,QAATA,KAAS;AACtE,MAAMC,OAAO,GAAGN,UAAU,CAAC;AAAEK,IAAAA,KAAK,EAALA;AAAF,GAAD,CAA1B;AACA,MAAMD,KAAK,GAAGH,QAAQ,CAACE,QAAD,EAAW;AAAEE,IAAAA,KAAK,EAALA;AAAF,GAAX,CAAtB;AACA,MAAME,MAAM,GAAGC,KAAK,CAACC,OAAN,CAAcL,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAA9C;AACA,MAAMM,KAAK,GAAGJ,OAAO,CAACK,MAAR,CAAe,UAACC,WAAD;AAAA,WAAiBL,MAAM,CAACM,IAAP,CAAY,UAACC,IAAD;AAAA,aAAUA,IAAI,KAAKF,WAAW,CAACR,KAA/B;AAAA,KAAZ,CAAjB;AAAA,GAAf,CAAd;AACA,MAAMW,IAAI,GAAGV,KAAK,CAACW,GAAN,CAAU,MAAV,CAAb;;AAEA,MAAIV,OAAO,CAACW,MAAR,KAAmB,CAAvB,EAA0B;AACxB,wBAAO,+EAAgDF,IAAhD,iBAAP;AACD;;AAED,sBACE,oBAAC,sBAAD,qBACE;AACE,IAAA,SAAS,EAAC,0CADZ;AAEE,IAAA,KAAK,EAAE;AACLG,MAAAA,UAAU,EAAEtB,KAAK,CAACuB,OADb;AAELC,MAAAA,MAAM,EAAE,QAFH;AAGLC,MAAAA,OAAO,EAAE,MAHJ;AAILC,MAAAA,QAAQ,EAAE;AAJL;AAFT,KASGZ,KAAK,CAACa,GAAN,CAAU,UAACT,IAAD;AAAA,wBACT;AACE,MAAA,GAAG,EAAEA,IAAI,CAACV,KADZ;AAEE,MAAA,SAAS,EAAC,iDAFZ;AAGE,MAAA,KAAK,EAAE;AACLoB,QAAAA,OAAO,EAAE,SADJ;AAELJ,QAAAA,MAAM,EAAE,KAFH;AAGLK,QAAAA,UAAU,EAAE5B,SAAS,CAAC6B,SAHjB;AAILC,QAAAA,YAAY,EAAE,KAJT;AAKLC,QAAAA,KAAK,EAAE/B,SAAS,CAACgC;AALZ;AAHT,OAWGf,IAAI,CAACgB,KAXR,CADS;AAAA,GAAV,CATH,CADF,CADF;AA6BD;AAED5B,mBAAmB,CAAC6B,SAApB,GAAgC;AAC9B3B,EAAAA,KAAK,EAAET,SAAS,CAACqC,SAAV,CAAoB,CACzBrC,SAAS,CAACsC,MADe,EAEzBtC,SAAS,CAACuC,OAAV,CAAkBvC,SAAS,CAACsC,MAA5B,CAFyB,EAGzBlC,kBAAkB,CAACoC,MAAnB,CAA0BxC,SAAS,CAACsC,MAApC,CAHyB,CAApB,CADuB;AAM9B5B,EAAAA,KAAK,EAAEV,SAAS,CAACyC,KAAV,CAAgB;AACrBpB,IAAAA,GAAG,EAAErB,SAAS,CAAC0C,IAAV,CAAeC;AADC,GAAhB,EAEJA;AAR2B,CAAhC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { fonts, colorsRaw, WidgetPreviewContainer } from 'netlify-cms-ui-default';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\n\nimport { getOptions, getValue } from './utils';\n\nexport default function InlineSelectPreview({ value: rawValue, field }) {\n  const options = getOptions({ field });\n  const value = getValue(rawValue, { field });\n  const values = Array.isArray(value) ? value : [value];\n  const items = options.filter((optionsItem) => values.find((item) => item === optionsItem.value));\n  const name = field.get('name');\n\n  if (options.length === 0) {\n    return <div>Error rendering inline-select control for {name}: No options</div>;\n  }\n\n  return (\n    <WidgetPreviewContainer>\n      <div\n        className=\"netlify-cms-widget-inline-select-preview\"\n        style={{\n          fontFamily: fonts.primary,\n          margin: '0 -2px',\n          display: 'flex',\n          flexWrap: 'wrap',\n        }}\n      >\n        {items.map((item) => (\n          <span\n            key={item.value}\n            className=\"netlify-cms-widget-inline-select-preview__badge\"\n            style={{\n              padding: '4px 8px',\n              margin: '2px',\n              background: colorsRaw.grayLight,\n              borderRadius: '5px',\n              color: colorsRaw.grayDark,\n            }}\n          >\n            {item.label}\n          </span>\n        ))}\n      </div>\n    </WidgetPreviewContainer>\n  );\n}\n\nInlineSelectPreview.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n    ImmutablePropTypes.listOf(PropTypes.string),\n  ]),\n  field: PropTypes.shape({\n    get: PropTypes.func.isRequired,\n  }).isRequired,\n};\n"],"file":"InlineSelectPreview.js"}