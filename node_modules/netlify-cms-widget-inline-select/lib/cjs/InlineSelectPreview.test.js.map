{"version":3,"sources":["../../src/InlineSelectPreview.test.jsx"],"names":["options","value","label","describe","it","name","getByText","queryByText","expect","toBeInTheDocument","not"],"mappings":";;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;AAFA;AAIA,IAAMA,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAHc,CAAhB;AAMAC,QAAQ,CAAC,qBAAD,EAAwB,YAAM;AACpCC,EAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAM;AAChC,kBAAmC,kCACjC,gCAAC,+BAAD;AAAqB,MAAA,KAAK,EAAC,KAA3B;AAAiC,MAAA,KAAK,EAAE,uBAAO;AAAEJ,QAAAA,OAAO,EAAPA,OAAF;AAAWK,QAAAA,IAAI,EAAE;AAAjB,OAAP;AAAxC,MADiC,CAAnC;AAAA,QAAQC,SAAR,WAAQA,SAAR;AAAA,QAAmBC,WAAnB,WAAmBA,WAAnB;;AAIAC,IAAAA,MAAM,CAACF,SAAS,CAAC,KAAD,CAAV,CAAN,CAAyBG,iBAAzB;AACAD,IAAAA,MAAM,CAACD,WAAW,CAAC,KAAD,CAAZ,CAAN,CAA2BG,GAA3B,CAA+BD,iBAA/B;AACAD,IAAAA,MAAM,CAACD,WAAW,CAAC,KAAD,CAAZ,CAAN,CAA2BG,GAA3B,CAA+BD,iBAA/B;AACD,GARC,CAAF;AAUAL,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAM;AACvC,mBAAmC,kCACjC,gCAAC,+BAAD;AAAqB,MAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR,CAA5B;AAA4C,MAAA,KAAK,EAAE,uBAAO;AAAEJ,QAAAA,OAAO,EAAPA,OAAF;AAAWK,QAAAA,IAAI,EAAE;AAAjB,OAAP;AAAnD,MADiC,CAAnC;AAAA,QAAQC,SAAR,YAAQA,SAAR;AAAA,QAAmBC,WAAnB,YAAmBA,WAAnB;;AAIAC,IAAAA,MAAM,CAACF,SAAS,CAAC,KAAD,CAAV,CAAN,CAAyBG,iBAAzB;AACAD,IAAAA,MAAM,CAACD,WAAW,CAAC,KAAD,CAAZ,CAAN,CAA2BG,GAA3B,CAA+BD,iBAA/B;AACAD,IAAAA,MAAM,CAACF,SAAS,CAAC,KAAD,CAAV,CAAN,CAAyBG,iBAAzB;AACD,GARC,CAAF;AASD,CApBO,CAAR","sourcesContent":["import React from 'react';\nimport { fromJS } from 'immutable';\nimport { render } from '@testing-library/react';\n// import 'react-testing-library/cleanup-after-each';\nimport '@testing-library/jest-dom/extend-expect';\nimport InlineSelectPreview from './InlineSelectPreview';\n\nconst options = [\n  { value: 'foo', label: 'Foo' },\n  { value: 'bar', label: 'Bar' },\n  { value: 'baz', label: 'Baz' },\n];\n\ndescribe('InlineSelectPreview', () => {\n  it('should render 1 value', () => {\n    const { getByText, queryByText } = render(\n      <InlineSelectPreview value=\"foo\" field={fromJS({ options, name: 'radio_1' })} />\n    );\n\n    expect(getByText('Foo')).toBeInTheDocument();\n    expect(queryByText('Bar')).not.toBeInTheDocument();\n    expect(queryByText('Baz')).not.toBeInTheDocument();\n  });\n\n  it('should render list of values', () => {\n    const { getByText, queryByText } = render(\n      <InlineSelectPreview value={['foo', 'baz']} field={fromJS({ options, name: 'radio_1' })} />\n    );\n\n    expect(getByText('Foo')).toBeInTheDocument();\n    expect(queryByText('Bar')).not.toBeInTheDocument();\n    expect(getByText('Baz')).toBeInTheDocument();\n  });\n});\n"],"file":"InlineSelectPreview.test.js"}