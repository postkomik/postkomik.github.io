{"version":3,"sources":["../../src/Option.jsx"],"names":["Option","props","id","name","value","label","onChange","selected","multiple","NAME","padding","margin","color","backgroundColor","colorsRaw","blue","grayLight","border","borderRadius","cursor","paddingRight","display","alignItems","marginRight","React","Component","propTypes","PropTypes","string","isRequired","node","func","bool"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,M;;;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,EAAL,GAAU,qBAAV;AAFiB;AAGlB;;;;WAED,kBAAS;AACP,wBAA6D,KAAKD,KAAlE;AAAA,UAAQE,IAAR,eAAQA,IAAR;AAAA,UAAcC,KAAd,eAAcA,KAAd;AAAA,UAAqBC,KAArB,eAAqBA,KAArB;AAAA,UAA4BC,QAA5B,eAA4BA,QAA5B;AAAA,UAAsCC,QAAtC,eAAsCA,QAAtC;AAAA,UAAgDC,QAAhD,eAAgDA,QAAhD;AACA,UAAMN,EAAE,aAAM,KAAKA,EAAX,cAAiBE,KAAjB,CAAR;AAEA,0BACE,+EACE,0DAAYK,eAAZ,6CADF,eAEE;AACE,QAAA,SAAS,YAAKA,eAAL,aADX;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,SADJ;AAELC,UAAAA,MAAM,EAAE,CAFH;AAGLC,UAAAA,KAAK,EAAEL,QAAQ,GAAG,OAAH,GAAa,SAHvB;AAILM,UAAAA,eAAe,EAAEN,QAAQ,GAAGO,+BAAUC,IAAb,GAAoBD,+BAAUE,SAJlD;AAKLC,UAAAA,MAAM,EAAE,uBALH;AAMLC,UAAAA,YAAY,EAAE;AANT;AAFT,sBAWE;AACE,QAAA,OAAO,EAAEhB,EADX;AAEE,QAAA,KAAK,EAAE;AACLiB,UAAAA,MAAM,EAAE,SADH;AAELC,UAAAA,YAAY,EAAE,CAFT;AAGLC,UAAAA,OAAO,EAAE,MAHJ;AAILC,UAAAA,UAAU,EAAE;AAJP;AAFT,sBASE;AACE,QAAA,EAAE,EAAEpB,EADN;AAEE,QAAA,KAAK,EAAE;AACLqB,UAAAA,WAAW,EAAE;AADR,SAFT;AAKE,QAAA,IAAI,EAAEf,QAAQ,GAAG,UAAH,GAAgB,OALhC;AAME,QAAA,IAAI,EAAEL,IANR;AAOE,QAAA,OAAO,EAAEI,QAPX;AAQE,QAAA,QAAQ,EAAE;AAAA,iBAAM,IAAN;AAAA,SARZ;AASE,QAAA,OAAO,EAAE;AAAA,iBAAMD,QAAQ,EAAd;AAAA;AATX,QATF,eAoBE,8CAAOD,KAAP,CApBF,CAXF,CAFF,CADF;AAuCD;;;;EAjDiCmB,kBAAMC,S;;;AAoD1CzB,MAAM,CAAC0B,SAAP,GAAmB;AACjBvB,EAAAA,IAAI,EAAEwB,sBAAUC,MAAV,CAAiBC,UADN;AAEjBzB,EAAAA,KAAK,EAAEuB,sBAAUC,MAAV,CAAiBC,UAFP;AAGjBxB,EAAAA,KAAK,EAAEsB,sBAAUG,IAAV,CAAeD,UAHL;AAIjBvB,EAAAA,QAAQ,EAAEqB,sBAAUI,IAAV,CAAeF,UAJR;AAKjBtB,EAAAA,QAAQ,EAAEoB,sBAAUK,IAAV,CAAeH,UALR;AAMjBrB,EAAAA,QAAQ,EAAEmB,sBAAUK;AANH,CAAnB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colorsRaw } from 'netlify-cms-ui-default';\n\nimport { NAME } from './constants';\nimport { getGUID } from './utils';\n\nexport default class Option extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = getGUID();\n  }\n\n  render() {\n    const { name, value, label, onChange, selected, multiple } = this.props;\n    const id = `${this.id}_${value}`;\n\n    return (\n      <>\n        <style>{`.${NAME}__option:hover { filter: invert(15%); }`}</style>\n        <span\n          className={`${NAME}__option`}\n          style={{\n            padding: '2px 6px',\n            margin: 2,\n            color: selected ? 'white' : 'inherit',\n            backgroundColor: selected ? colorsRaw.blue : colorsRaw.grayLight,\n            border: '2px solid transparent',\n            borderRadius: 5,\n          }}\n        >\n          <label\n            htmlFor={id}\n            style={{\n              cursor: 'pointer',\n              paddingRight: 2,\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <input\n              id={id}\n              style={{\n                marginRight: 6,\n              }}\n              type={multiple ? 'checkbox' : 'radio'}\n              name={name}\n              checked={selected}\n              onChange={() => null}\n              onClick={() => onChange()}\n            />\n            <span>{label}</span>\n          </label>\n        </span>\n      </>\n    );\n  }\n}\n\nOption.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.node.isRequired,\n  onChange: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  multiple: PropTypes.bool,\n};\n"],"file":"Option.js"}