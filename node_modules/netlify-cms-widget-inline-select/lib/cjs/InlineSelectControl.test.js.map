{"version":3,"sources":["../../src/InlineSelectControl.test.jsx"],"names":["options","value","label","InlineSelectController","props","jest","fn","setState","state","defaultValue","onStateChange","children","handleOnChange","React","Component","propTypes","PropTypes","func","isRequired","setup","field","renderArgs","stateChangeSpy","setActiveSpy","setInactiveSpy","helpers","onChangeSpy","describe","expectRadioInput","element","checked","expect","toBeInTheDocument","type","toEqual","toBe","it","name","getByLabelText","fireEvent","click","toHaveBeenCalledTimes","toHaveBeenCalledWith","expectCheckboxInput","multiple"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { fromJS } from 'immutable';\nimport { render, fireEvent } from '@testing-library/react';\n// import 'react-testing-library/cleanup-after-each';\nimport '@testing-library/jest-dom/extend-expect';\nimport InlineSelectControl from './InlineSelectControl';\n\nconst options = [\n  { value: 'Foo', label: 'Foo' },\n  { value: 'Bar', label: 'Bar' },\n  { value: 'Baz', label: 'Baz' },\n];\n\nclass InlineSelectController extends React.Component {\n  handleOnChange = jest.fn((value) => {\n    this.setState({ value });\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.defaultValue, // eslint-disable-line react/prop-types\n    };\n  }\n\n  componentDidUpdate() {\n    const { onStateChange } = this.props;\n    onStateChange(this.state);\n  }\n\n  render() {\n    const { children } = this.props;\n    const { value } = this.state;\n    return children({ value, handleOnChange: this.handleOnChange });\n  }\n}\n\nInlineSelectController.propTypes = {\n  children: PropTypes.func.isRequired,\n  onStateChange: PropTypes.func.isRequired,\n};\n\nfunction setup({ field, defaultValue }) {\n  let renderArgs;\n  const stateChangeSpy = jest.fn();\n  const setActiveSpy = jest.fn();\n  const setInactiveSpy = jest.fn();\n\n  const helpers = render(\n    <InlineSelectController defaultValue={defaultValue} onStateChange={stateChangeSpy}>\n      {({ value, handleOnChange }) => {\n        renderArgs = { value, onChangeSpy: handleOnChange };\n        return (\n          <InlineSelectControl\n            field={field}\n            value={value}\n            onChange={handleOnChange}\n            forID=\"inline-select\"\n            classNameWrapper=\"\"\n            setActiveStyle={setActiveSpy}\n            setInactiveStyle={setInactiveSpy}\n          />\n        );\n      }}\n    </InlineSelectController>\n  );\n\n  return {\n    ...helpers,\n    ...renderArgs,\n    stateChangeSpy,\n    setActiveSpy,\n    setInactiveSpy,\n  };\n}\n\ndescribe('InlineSelectControl', () => {\n  describe('radios', () => {\n    const expectRadioInput = (element, checked = false) => {\n      expect(element).toBeInTheDocument();\n      expect(element.type).toEqual('radio');\n      expect(element.checked).toBe(checked);\n    };\n\n    it('should respect value', () => {\n      const field = fromJS({ options, name: 'radio_1' });\n      const { getByLabelText } = setup({ field, defaultValue: options[2].value });\n\n      expectRadioInput(getByLabelText('Foo'));\n      expectRadioInput(getByLabelText('Bar'));\n      expectRadioInput(getByLabelText('Baz'), true);\n    });\n\n    it('should call onChange with correct selectedItem', () => {\n      const field = fromJS({ options, name: 'radio_1' });\n      const { getByLabelText, onChangeSpy } = setup({ field });\n\n      expectRadioInput(getByLabelText('Foo'));\n      expectRadioInput(getByLabelText('Bar'));\n      expectRadioInput(getByLabelText('Baz'));\n\n      fireEvent.click(getByLabelText('Foo'));\n\n      expect(onChangeSpy).toHaveBeenCalledTimes(1);\n      expect(onChangeSpy).toHaveBeenCalledWith(options[0].value);\n    });\n  });\n\n  describe('checkboxes', () => {\n    const expectCheckboxInput = (element, checked = false) => {\n      expect(element).toBeInTheDocument();\n      expect(element.type).toEqual('checkbox');\n      expect(element.checked).toBe(checked);\n    };\n\n    it('should respect value', () => {\n      const field = fromJS({ options, name: 'checkbox_1', multiple: true });\n      const { getByLabelText } = setup({\n        field,\n        defaultValue: fromJS([options[1].value, options[2].value]),\n      });\n\n      expectCheckboxInput(getByLabelText('Foo'));\n      expectCheckboxInput(getByLabelText('Bar'), true);\n      expectCheckboxInput(getByLabelText('Baz'), true);\n    });\n\n    it('should call onChange with correct selectedItem', () => {\n      const field = fromJS({ options, name: 'checkbox_1', multiple: true });\n      const { getByLabelText, onChangeSpy } = setup({ field });\n\n      expectCheckboxInput(getByLabelText('Foo'));\n      expectCheckboxInput(getByLabelText('Bar'));\n      expectCheckboxInput(getByLabelText('Baz'));\n\n      fireEvent.click(getByLabelText('Foo'));\n      fireEvent.click(getByLabelText('Baz'));\n\n      expect(onChangeSpy).toHaveBeenCalledTimes(2);\n      expect(onChangeSpy).toHaveBeenCalledWith([options[0].value]);\n      expect(onChangeSpy).toHaveBeenCalledWith([options[0].value, options[2].value]);\n    });\n  });\n});\n"],"file":"InlineSelectControl.test.js"}